#!/usr/bin/env bash
# System monitoring utilities
# Based on wookayin's system monitoring scripts

set -euo pipefail

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

show_help() {
    cat << EOF
System Monitor Utilities

Usage: system-monitor [command]

Commands:
    cpu         Show CPU usage
    memory      Show memory usage
    disk        Show disk usage
    network     Show network interfaces
    processes   Show top processes
    all         Show all system information
    help        Show this help message

Examples:
    system-monitor cpu
    system-monitor all
EOF
}

show_cpu() {
    echo -e "${GREEN}CPU Information:${NC}"
    if [[ "$OSTYPE" == "darwin"* ]]; then
        # macOS
        echo "CPU Usage:"
        top -l 1 -s 0 | grep "CPU usage" || echo "CPU info not available"
        echo
        echo "Load Average:"
        uptime | awk -F'load averages:' '{print $2}'
    else
        # Linux
        echo "CPU Usage:"
        cat /proc/loadavg
        echo
        echo "CPU Info:"
        lscpu | head -10
    fi
    echo
}

show_memory() {
    echo -e "${BLUE}Memory Information:${NC}"
    if [[ "$OSTYPE" == "darwin"* ]]; then
        # macOS
        echo "Memory Usage:"
        top -l 1 -s 0 | head -10 | grep "PhysMem"
        echo
        echo "VM Stats:"
        vm_stat | head -5
    else
        # Linux
        free -h
        echo
        echo "Detailed Memory:"
        cat /proc/meminfo | head -5
    fi
    echo
}

show_disk() {
    echo -e "${YELLOW}Disk Usage:${NC}"
    df -h | grep -E '^/dev/|^Filesystem'
    echo
    
    echo -e "${YELLOW}Disk I/O:${NC}"
    if [[ "$OSTYPE" == "darwin"* ]]; then
        iostat -d 1 2 | tail -n +4
    else
        iostat -d 1 2 2>/dev/null | tail -n +4 || echo "iostat not available"
    fi
    echo
}

show_network() {
    echo -e "${PURPLE}Network Interfaces:${NC}"
    if [[ "$OSTYPE" == "darwin"* ]]; then
        ifconfig | grep -E '^[a-z]|inet ' | head -10
    else
        ip addr show | grep -E '^[0-9]|inet ' | head -10
    fi
    echo
    
    echo -e "${PURPLE}Network Connections:${NC}"
    netstat -an | head -10
    echo
}

show_processes() {
    echo -e "${CYAN}Top Processes (CPU):${NC}"
    if [[ "$OSTYPE" == "darwin"* ]]; then
        ps aux | head -1
        ps aux | tail -n +2 | sort -k3 -nr | head -10
    else
        ps aux | head -1
        ps aux | tail -n +2 | sort -k3 -nr | head -10
    fi
    echo
    
    echo -e "${CYAN}Top Processes (Memory):${NC}"
    if [[ "$OSTYPE" == "darwin"* ]]; then
        ps aux | head -1
        ps aux | tail -n +2 | sort -k4 -nr | head -10
    else
        ps aux | head -1
        ps aux | tail -n +2 | sort -k4 -nr | head -10
    fi
    echo
}

show_all() {
    echo -e "${GREEN}=== SYSTEM MONITOR ===${NC}"
    echo -e "${GREEN}Timestamp: $(date)${NC}"
    echo -e "${GREEN}Hostname: $(hostname)${NC}"
    echo -e "${GREEN}Uptime: $(uptime)${NC}"
    echo
    
    show_cpu
    show_memory
    show_disk
    show_network
    show_processes
}

# Main command dispatcher
case "${1:-help}" in
    cpu)
        show_cpu
        ;;
    memory|mem)
        show_memory
        ;;
    disk)
        show_disk
        ;;
    network|net)
        show_network
        ;;
    processes|proc)
        show_processes
        ;;
    all)
        show_all
        ;;
    help|--help|-h|"")
        show_help
        ;;
    *)
        echo -e "${RED}Unknown command: $1${NC}"
        echo
        show_help
        exit 1
        ;;
esac